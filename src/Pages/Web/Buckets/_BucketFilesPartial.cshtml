@model IEnumerable<AlphabetUpdateServer.Models.Buckets.BucketFile>

@{
    string readableSize(long size) => new PrettySize(size).Format(UnitBase.Base10);
    string readableDateTime(DateTimeOffset dt) => dt.Humanize();
}

<div class="bg-white p-6 shadow-md rounded-lg mx-auto w-full">
    <h4 class="text-2xl mb-4 font-bold dark:text-white">파일 목록</h4>
    @if (Model.Any())
    {
        <div class="overflow-x-auto">
            <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
                <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                <tr>
                    <th scope="col" class="px-6 py-3">
                        <div class="flex items-center">
                            Path
                            <button onclick="sortTable(this)" data-sort="path">
                                <svg class="w-3 h-3 ms-1.5" aria-hidden="true"
                                     xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24">
                                    <path
                                        d="M8.574 11.024h6.852a2.075 2.075 0 0 0 1.847-1.086 1.9 1.9 0 0 0-.11-1.986L13.736 2.9a2.122 2.122 0 0 0-3.472 0L6.837 7.952a1.9 1.9 0 0 0-.11 1.986 2.074 2.074 0 0 0 1.847 1.086Zm6.852 1.952H8.574a2.072 2.072 0 0 0-1.847 1.087 1.9 1.9 0 0 0 .11 1.985l3.426 5.05a2.123 2.123 0 0 0 3.472 0l3.427-5.05a1.9 1.9 0 0 0 .11-1.985 2.074 2.074 0 0 0-1.846-1.087Z"/>
                                </svg>
                            </button>
                        </div>
                    </th>
                    <th scope="col" class="px-6 py-3">
                        <div class="flex items-center">
                            Size
                            <button onclick="sortTable(this)" data-sort="size">
                                <svg class="w-3 h-3 ms-1.5" aria-hidden="true"
                                     xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24">
                                    <path
                                        d="M8.574 11.024h6.852a2.075 2.075 0 0 0 1.847-1.086 1.9 1.9 0 0 0-.11-1.986L13.736 2.9a2.122 2.122 0 0 0-3.472 0L6.837 7.952a1.9 1.9 0 0 0-.11 1.986 2.074 2.074 0 0 0 1.847 1.086Zm6.852 1.952H8.574a2.072 2.072 0 0 0-1.847 1.087 1.9 1.9 0 0 0 .11 1.985l3.426 5.05a2.123 2.123 0 0 0 3.472 0l3.427-5.05a1.9 1.9 0 0 0 .11-1.985 2.074 2.074 0 0 0-1.846-1.087Z"/>
                                </svg>
                            </button>
                        </div>
                    </th>
                    <th scope="col" class="px-6 py-3">
                        <div class="flex items-center">
                            Updated
                            <button onclick="sortTable(this)" data-sort="updated">
                                <svg class="w-3 h-3 ms-1.5" aria-hidden="true"
                                     xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24">
                                    <path
                                        d="M8.574 11.024h6.852a2.075 2.075 0 0 0 1.847-1.086 1.9 1.9 0 0 0-.11-1.986L13.736 2.9a2.122 2.122 0 0 0-3.472 0L6.837 7.952a1.9 1.9 0 0 0-.11 1.986 2.074 2.074 0 0 0 1.847 1.086Zm6.852 1.952H8.574a2.072 2.072 0 0 0-1.847 1.087 1.9 1.9 0 0 0 .11 1.985l3.426 5.05a2.123 2.123 0 0 0 3.472 0l3.427-5.05a1.9 1.9 0 0 0 .11-1.985 2.074 2.074 0 0 0-1.846-1.087Z"/>
                                </svg>
                            </button>
                        </div>
                    </th>
                    <th scope="col" class="px-6 py-3">
                        <div class="flex items-center">
                            Checksum
                            <button onclick="sortTable(this)" data-sort="checksum">
                                <svg class="w-3 h-3 ms-1.5" aria-hidden="true"
                                     xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24">
                                    <path
                                        d="M8.574 11.024h6.852a2.075 2.075 0 0 0 1.847-1.086 1.9 1.9 0 0 0-.11-1.986L13.736 2.9a2.122 2.122 0 0 0-3.472 0L6.837 7.952a1.9 1.9 0 0 0-.11 1.986 2.074 2.074 0 0 0 1.847 1.086Zm6.852 1.952H8.574a2.072 2.072 0 0 0-1.847 1.087 1.9 1.9 0 0 0 .11 1.985l3.426 5.05a2.123 2.123 0 0 0 3.472 0l3.427-5.05a1.9 1.9 0 0 0 .11-1.985 2.074 2.074 0 0 0-1.846-1.087Z"/>
                                </svg>
                            </button>
                        </div>
                    </th>
                </tr>
                </thead>
                <tbody>
                @foreach (var file in Model)
                {
                    <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600"
                        data-path="@file.Path"
                        data-size="@file.Metadata.Size"
                        data-updated="@file.Metadata.LastUpdated.ToUnixTimeMilliseconds()"
                        data-checksum="@file.Metadata.Checksum">
                        <td scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white"
                            data-tippy-content="@file.Location">
                            <a href="@file.Location" target="_blank">@file.Path</a>
                        </td>
                        <td class="px-6 py-4" data-tippy-content="@file.Metadata.Size.ToString("#,#' bytes'")">
                            @readableSize(file.Metadata.Size)</td>
                        <td class="px-6 py-4" data-tippy-content="@file.Metadata.LastUpdated.ToString("o")">
                            @readableDateTime(file.Metadata.LastUpdated)</td>
                        <td class="px-6 py-4">@file.Metadata.Checksum</td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <p>파일이 없습니다.</p>
    }
</div>

<script>
    function sortTable(header) {
        const table = header.closest('table');
        const tbody = table.querySelector('tbody');
        const rows = Array.from(tbody.querySelectorAll('tr'));
        const key = header.getAttribute('data-sort');
        const direction = header.classList.toggle('asc') ? 1 : -1;

        rows.sort((a, b) => {
            let aValue = a.getAttribute(`data-${key}`);
            let bValue = b.getAttribute(`data-${key}`);
            if (key === 'size' || key === 'updated') {
                aValue = parseInt(aValue);
                bValue = parseInt(bValue);
                return (aValue > bValue ? 1 : -1) * direction;

            }
            else {
                return aValue.localeCompare(bValue) * direction;
            }
        });

        tbody.innerHTML = '';
        rows.forEach(row => tbody.appendChild(row));
        return false;
    }
</script>