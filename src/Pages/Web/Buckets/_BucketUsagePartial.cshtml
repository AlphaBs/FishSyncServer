@model AlphabetUpdateServer.Pages.Web.Buckets.BucketUsageModel

@{
    string readableSize(long size) => new PrettySize(size).Format(UnitBase.Base10);
    string readableDateTime(DateTimeOffset dt) => dt.Humanize();
}

<div class="bg-white p-6 shadow-md rounded-lg mx-auto w-full mb-6">
    <h4 class="text-2xl font-bold dark:text-white mb-4">사용 한도</h4>
    
    @if (Model.ShowLimitations)
    {
        <div class="flex flex-col mb-3">
            <div class="font-semibold text-sm w-1/3">
                @Html.DisplayNameFor(model => model.Limitations.IsReadOnly)
            </div>
            <div class="text-gray-500 dark:text-gray-400 w-2/3">
                @(Model.Limitations.IsReadOnly ? "YES" : "NO")
            </div>
        </div>
    }
    
    <div class="flex flex-col mb-3">
        <div class="font-semibold text-sm w-1/3">
            @Html.DisplayNameFor(model => model.CurrentBucketSize)
        </div>
        <div class="text-gray-500 dark:text-gray-400 w-2/3">
            @readableSize(Model.CurrentBucketSize) (@Model.CurrentBucketSize.ToString("N0") bytes)
        </div>
    </div>

    @if (Model.ShowLimitations)
    {
        <div class="flex flex-col mb-3">
            <div class="font-semibold text-sm w-1/3">
                @Html.DisplayNameFor(model => model.Limitations.MaxBucketSize)
            </div>
            <div class="text-gray-500 dark:text-gray-400 w-2/3">
                @readableSize(Model.Limitations.MaxBucketSize) (@Model.Limitations.MaxBucketSize.ToString("N0") bytes)
            </div>
        </div>
    }
    
    <div class="flex flex-col mb-3">
        <div class="font-semibold text-sm w-1/3">
            @Html.DisplayNameFor(model => model.CurrentMaxFileSize)
        </div>
        <div class="text-gray-500 dark:text-gray-400 w-2/3">
            @readableSize(Model.CurrentMaxFileSize) (@Model.CurrentMaxFileSize.ToString("N0") bytes)
        </div>
    </div>

    @if (Model.ShowLimitations)
    {
        <div class="flex flex-col mb-3">
            <div class="font-semibold text-sm w-1/3">
                @Html.DisplayNameFor(model => model.Limitations.MaxFileSize)
            </div>
            <div class="text-gray-500 dark:text-gray-400 w-2/3">
                @readableSize(Model.Limitations.MaxFileSize) (@Model.Limitations.MaxFileSize.ToString("N0") bytes)
            </div>
        </div>
    }
    
    <div class="flex flex-col mb-3">
        <div class="font-semibold text-sm w-1/3">
            @Html.DisplayNameFor(model => model.CurrentFileCount)
        </div>
        <div class="text-gray-500 dark:text-gray-400 w-2/3">
            @Model.CurrentFileCount.ToString("N0")
        </div>
    </div>

    @if (Model.ShowLimitations)
    {
        <div class="flex flex-col mb-3">
            <div class="font-semibold text-sm w-1/3">
                @Html.DisplayNameFor(model => model.Limitations.MaxNumberOfFiles)
            </div>
            <div class="text-gray-500 dark:text-gray-400 w-2/3">
                @Model.Limitations.MaxNumberOfFiles.ToString("N0")
            </div>
        </div>
    }
    
    <div class="flex flex-col mb-3">
        <div class="font-semibold text-sm w-1/3">
            @Html.DisplayNameFor(model => model.CurrentMonthlySyncCount)
        </div>
        <div class="text-gray-500 dark:text-gray-400 w-2/3">
            @(Model.CurrentMonthlySyncCount)회
        </div>
    </div>

    @if (Model.ShowLimitations)
    {
        <div class="flex flex-col mb-3">
            <div class="font-semibold text-sm w-1/3">
                @Html.DisplayNameFor(model => model.Limitations.MonthlyMaxSyncCount)
            </div>
            <div class="text-gray-500 dark:text-gray-400 w-2/3">
                @(Model.Limitations.MonthlyMaxSyncCount)회
            </div>
        </div>
    }

    @if (Model.ShowLimitations)
    {
        <div class="flex flex-col mb-3">
            <div class="font-semibold text-sm w-1/3">
                @Html.DisplayNameFor(model => model.Limitations.ExpiredAt)
            </div>
            <div class="text-gray-500 dark:text-gray-400 w-2/3">
                @readableDateTime(Model.Limitations.ExpiredAt) (@Model.Limitations.ExpiredAt)
            </div>
        </div>
    }
</div>